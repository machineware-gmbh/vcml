name: asan

on:
  push:
    branches:
      - 'main'
      - 'dev**'
  pull_request:
    branches:
      - 'main'

env:
  TARGET_ARCH: linux64
  ASAN_OPTIONS: verbosity=1
  TSAN_OPTIONS: verbosity=1
  UBSAN_OPTIONS: print_stacktrace=1

jobs:
  sanitize:
    runs-on: ubuntu-20.04
    name: ${{matrix.sanitizer}}

    strategy:
      fail-fast: false
      matrix:
        systemc: [2.3.3]
        sanitizer: [ASAN, TSAN, UBSAN]

    env:
      SYSTEMC_HOME: ${{github.workspace}}/systemc/${{matrix.systemc}}

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'recursive'

    - name: Setup Dependencies
      run: |
        sudo apt-get update -y -qq
        sudo apt-get install libelf-dev libsdl2-dev liblua5.3-dev libvncserver-dev libslirp-dev ninja-build

    - name: Cache SystemC
      id: cache-systemc
      uses: actions/cache@v3
      with:
        path: ${{github.workspace}}/systemc
        key: cache-systemc-asan-${{matrix.systemc}}-${{runner.os}}

    - name: Download SystemC
      if: steps.cache-systemc.outputs.cache-hit != 'true'
      run: ./utils/setup-systemc -p ${{github.workspace}} -v ${{matrix.systemc}}

    - name: Configure
      run: cmake -G Ninja -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.sanitizer}} -DVCML_BUILD_TESTS=ON

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.sanitizer}} -j $(nproc)

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{matrix.sanitizer}} --verbose

